// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class UserAddedSelf extends ethereum.Event {
  get params(): UserAddedSelf__Params {
    return new UserAddedSelf__Params(this);
  }
}

export class UserAddedSelf__Params {
  _event: UserAddedSelf;

  constructor(event: UserAddedSelf) {
    this._event = event;
  }

  get userAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get userMsg(): string {
    return this._event.parameters[1].value.toString();
  }

  get userNumber(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class GeneralFund__userObjsResult {
  value0: BigInt;
  value1: string;
  value2: i32;

  constructor(value0: BigInt, value1: string, value2: i32) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    map.set(
      "value2",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value2))
    );
    return map;
  }

  getUserId(): BigInt {
    return this.value0;
  }

  getUserMsg(): string {
    return this.value1;
  }

  getVoteCounter(): i32 {
    return this.value2;
  }
}

export class GeneralFund extends ethereum.SmartContract {
  static bind(address: Address): GeneralFund {
    return new GeneralFund("GeneralFund", address);
  }

  totalAddedSelf(): BigInt {
    let result = super.call("totalAddedSelf", "totalAddedSelf():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalAddedSelf(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "totalAddedSelf",
      "totalAddedSelf():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  userObjs(param0: Address): GeneralFund__userObjsResult {
    let result = super.call(
      "userObjs",
      "userObjs(address):(uint256,string,uint16)",
      [ethereum.Value.fromAddress(param0)]
    );

    return new GeneralFund__userObjsResult(
      result[0].toBigInt(),
      result[1].toString(),
      result[2].toI32()
    );
  }

  try_userObjs(
    param0: Address
  ): ethereum.CallResult<GeneralFund__userObjsResult> {
    let result = super.tryCall(
      "userObjs",
      "userObjs(address):(uint256,string,uint16)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new GeneralFund__userObjsResult(
        value[0].toBigInt(),
        value[1].toString(),
        value[2].toI32()
      )
    );
  }
}

export class AddSelfCall extends ethereum.Call {
  get inputs(): AddSelfCall__Inputs {
    return new AddSelfCall__Inputs(this);
  }

  get outputs(): AddSelfCall__Outputs {
    return new AddSelfCall__Outputs(this);
  }
}

export class AddSelfCall__Inputs {
  _call: AddSelfCall;

  constructor(call: AddSelfCall) {
    this._call = call;
  }

  get _whyAddedSelf(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class AddSelfCall__Outputs {
  _call: AddSelfCall;

  constructor(call: AddSelfCall) {
    this._call = call;
  }
}
